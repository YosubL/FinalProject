<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="minjun">

	<!-- === #39. 시작페이지에서 메인 이미지를 보여주는 것 === -->
	<select id="getImgfilenameList" resultType="String">
	   select imgbgfilename
       from TBL_MAIN_IMAGE
	</select>
	
	<!-- 휴가신청시 tbl_vacation_manage 테이블에  insert 하기 -->
	<insert id="annual_insert" parameterType="HashMap">
		INSERT INTO tbl_vacation_manage (
			vacation_seq, 
			fk_employee_id, 
			vacation_reason, 
			vacation_start_date,
		    vacation_end_date,
		    vacation_reg_date,
		    vacation_confirm, 
		    vacation_type, 
		    vacation_manager) 
		VALUES (
			seq_vacation_manage.nextval, 
			#{employee_id}, 
			#{vacation_reason},
			to_date(#{vacation_start_date}, 'YYYY-MM-DD'),
			to_date(#{vacation_end_date}, 'YYYY-MM-DD'),
			default,
			1,
			#{vacation_type},
			#{vacation_manager})
	</insert>
	
	<!-- 특정 회원의 휴가 정보 가져오기 -->
	<select id="vacation_select" resultType="com.spring.app.domain.VacationVO">
		select annual, family_care, reserve_forces, infertility_treatment, childbirth, marriage, reward
		from tbl_vacation
		where fk_employee_id = #{employee_id}
	</select>
	
	<!-- 특정 사용자의 대기중인 휴가 가져오기 -->
	<select id="myHoldList" resultType="com.spring.app.domain.Vacation_manageVO">
		select vacation_seq, name, fk_employee_id, vacation_reason, to_char(vacation_start_date, 'yyyy-mm-dd') AS vacation_start_date,
		       to_char(vacation_end_date, 'yyyy-mm-dd') AS vacation_end_date, 
		       to_char(vacation_reg_date, 'yyyy-mm-dd') AS vacation_reg_date,
		       vacation_confirm, vacation_type, vacation_manager
		from tbl_vacation_manage M
		JOIN tbl_employees E
		ON M.fk_employee_id = E.employee_id
		where vacation_confirm = 1 and fk_employee_id = #{employee_id}
	</select>
	
	<!-- 특정 사용자의 승인완료된 휴가 가져오기 -->
	<select id="myApprovedList" resultType="com.spring.app.domain.Vacation_manageVO">
		select vacation_seq, name, fk_employee_id, vacation_reason, to_char(vacation_start_date, 'yyyy-mm-dd') AS vacation_start_date,
		       to_char(vacation_end_date, 'yyyy-mm-dd') AS vacation_end_date, 
		       to_char(vacation_reg_date, 'yyyy-mm-dd') AS vacation_reg_date, 
		       vacation_confirm, vacation_type, vacation_manager
		from tbl_vacation_manage M
		JOIN tbl_employees E
		ON M.fk_employee_id = E.employee_id
		where vacation_confirm = 2 and fk_employee_id = #{employee_id}
	</select>
	
	<!-- 특정 사용자의 반려된 휴가 가져오기 -->
	<select id="myReturnList" resultType="com.spring.app.domain.Vacation_manageVO">
		SELECT V.vacation_seq, V.name, V.fk_employee_id, V.vacation_reason, vacation_start_date,
		       V.vacation_end_date,
		       V.vacation_reg_date, 
		       to_char(R.vacation_return_date, 'yyyy-mm-dd') AS vacation_return_date, 
		       V.vacation_confirm, V.vacation_type, R.vacation_manager AS vacation_manager_name , V.vacation_manager, R.vacation_return_reason
		FROM
		(
		select vacation_seq, name, fk_employee_id, vacation_reason, 
			   to_char(vacation_start_date, 'yyyy-mm-dd') AS vacation_start_date,
		       to_char(vacation_end_date, 'yyyy-mm-dd') AS vacation_end_date,
		       to_char(vacation_reg_date, 'yyyy-mm-dd') AS vacation_reg_date, 
		       vacation_confirm, vacation_type, vacation_manager
		from tbl_vacation_manage M
		JOIN tbl_employees E
		ON M.fk_employee_id = E.employee_id
		where vacation_confirm = 3 and fk_employee_id = #{employee_id}
		) V 
		JOIN tbl_vacation_manage_return R
		ON V.fk_employee_id = R.fk_employee_id
	</select>
	
	<!-- ================== 휴가 관리 페이지 [시작] ===================== -->
	<!-- 대기중인 휴가 갯수 알아오기 -->
	<select id="total_count" parameterType="String" resultType="String">
		SELECT distinct COUNT(*) OVER () AS total_count
		FROM tbl_vacation_manage M
		JOIN tbl_employees E ON M.fk_employee_id = E.employee_id
		<if test="vacation_manager == '10000'">
		where vacation_confirm = 1 
		</if>
		<if test="vacation_manager != '10000'">
		where vacation_confirm = 1 
		and manager_id = #{employee_id}
		</if>
	</select>
	
	<!-- 회원들의 신청된 휴가 정보 중 대기중인 회원 가져오기 -->
	<select id="vacList" resultType="com.spring.app.domain.Vacation_manageVO">
		select vacation_seq, name, fk_employee_id, vacation_reason, 
			   to_char(vacation_start_date, 'yyyy-mm-dd') AS vacation_start_date,
		       to_char(vacation_end_date, 'yyyy-mm-dd') AS vacation_end_date, 
		       to_char(vacation_reg_date, 'yyyy-mm-dd') AS vacation_reg_date,
		       vacation_confirm, vacation_type, vacation_manager, fk_department_id, name, email
		from tbl_vacation_manage M
		JOIN tbl_employees E
		ON M.fk_employee_id = E.employee_id
		<if test="vacation_manager == '10000'">
		where vacation_confirm = 1 
		order by vacation_start_date
		</if>
		<if test="vacation_manager != '10000'">
		where vacation_confirm = 1 
		and manager_id = '${vacation_manager}'
		</if>
	</select>
	
	<!-- 회원들의 신청된 휴가 정보 중 반려된 회원 가져오기 -->
	<select id="vacReturnList" resultType="com.spring.app.domain.Vacation_manageVO">
		select vacation_seq, name, fk_employee_id, vacation_reason, to_char(vacation_start_date, 'yyyy-mm-dd') AS vacation_start_date,
		       to_char(vacation_end_date, 'yyyy-mm-dd') AS vacation_end_date, 
		       to_char(vacation_reg_date, 'yyyy-mm-dd') AS vacation_reg_date,
		       vacation_confirm, vacation_type, vacation_manager
		from tbl_vacation_manage M
		JOIN tbl_employees E
		ON M.fk_employee_id = E.employee_id
		where vacation_confirm = 3
		and manager_id = '${vacation_manager}'
	</select>
	
	<!-- 회원들의 신청된 휴가 정보 중 승인된 회원 가져오기 -->
	<select id="vacApprovedList" resultType="com.spring.app.domain.Vacation_manageVO">
		select vacation_seq, name, fk_employee_id, vacation_reason, to_char(vacation_start_date, 'yyyy-mm-dd') AS vacation_start_date,
		       to_char(vacation_end_date, 'yyyy-mm-dd') AS vacation_end_date, 
		       to_char(vacation_reg_date, 'yyyy-mm-dd') AS vacation_reg_date,
		       vacation_confirm, vacation_type, vacation_manager
		from tbl_vacation_manage M
		JOIN tbl_employees E
		ON M.fk_employee_id = E.employee_id
		where vacation_confirm = 2
		<if test="vacation_manager != '10000'">
		and manager_id = '${vacation_manager}'
		</if>
	</select>
	
	<!-- 트랜잭션처리함 -->
	<!-- 휴가 승인 결재시 휴가관리테이블 업데이트 하기 -->
	<update id="vacManage_Update" parameterType="HashMap">
		update tbl_vacation_manage 
		set vacation_confirm = 2
		where vacation_seq IN
		<foreach collection="vacation_seq_arr" index="i" open="(" separator="," close=")">
        	${vacation_seq_arr[i]}
    	</foreach>
	</update>
	
	<!-- 휴가 승인 결재시 휴가 테이블의 annual 컬럼을 신청수만큼 빼기 -->
	<update id="vacUpdate_annual2" parameterType="HashMap">
        update tbl_vacation
        set ${vacation_type} = (SELECT annual FROM tbl_vacation WHERE fk_employee_id = #{fk_employee_id}) - #{daysDiff}
        where fk_employee_id = #{fk_employee_id}
	</update>
	
	<!-- 연차를 제외한 나머지 휴가는  plus 처리 해줌 -->
	<update id="vacUpdate_plus" parameterType="HashMap">
        update tbl_vacation
        set ${vacation_type} = (SELECT ${vacation_type} FROM tbl_vacation WHERE fk_employee_id = #{fk_employee_id}) + #{daysDiff}
        where fk_employee_id = #{fk_employee_id}
	</update>
	
	<!-- 휴가 승인시 calendar 테이블에 insert -->
	<insert id="calendarInsert" parameterType="HashMap">
		INSERT INTO tbl_calendar_schedule (
		    scheduleno,
		    startdate,
		    enddate,
		    subject,
		    color,
		    place,
		    joinuser,
		    content,
		    fk_smcatgono,
		    fk_lgcatgono,
		    fk_employee_id,
		    fk_department_id,
		    fk_email
		) VALUES (
		    seq_scheduleno.nextval,
		    TO_DATE(#{vacation_start_date_arr}, 'YYYY-MM-DD'),
		    TO_DATE(#{vacation_end_date_arr}, 'YYYY-MM-DD'),
		    #{name_arr},
		    '#bf80ff',
		    '휴가',
		    null,
		    '휴가',
		    30,
		    2,
		    #{fk_employee_id},
		    #{fk_department_id},
		    #{email_arr}
		) 
	</insert>
	
	<!-- 휴가 신청한 회원들의 보유 휴가 가져오기 -->
	<select id="keepVacList" parameterType="String" resultType="com.spring.app.domain.Vacation_manageVO">
		select V.fk_employee_id, annual, family_care, reserve_forces, infertility_treatment, childbirth, marriage, reward
		from tbl_vacation_manage M 
		JOIN tbl_vacation V
		ON M.fk_employee_id = V.fk_employee_id
	</select>
	
	<select id="vacHoldList_one" resultType="HashMap" parameterType="String">
		select name, fk_employee_id, vacation_type, to_char(vacation_start_date, 'yyyy-mm-dd') AS vacation_start_date, 
			   to_char(vacation_end_date, 'yyyy-mm-dd') AS vacation_end_date, 
			   to_char(vacation_reg_date, 'yyyy-mm-dd') AS vacation_reg_date,
			   vacation_confirm
		from tbl_vacation_manage V 
		JOIN tbl_employees E
		ON V.fk_employee_id = E.employee_id
		where vacation_seq = #{vacation_seq}
	</select>
	
	<!-- 휴가 반려시 반려테이블에 insert 하기 -->
	<insert id="vacInsert_return" parameterType="HashMap">
		insert into tbl_vacation_manage_return(vacation_return_seq, fk_vacation_seq, fk_employee_id, vacation_return_reason, vacation_return_date, vacation_manager)
		values(vacation_return_seq.nextval, #{vacation_seq}, #{employee_id}, #{vacation_return_reason}, sysdate, #{loginuser_name})
	</insert>
	
	<!-- 휴가 반려 결재시 휴가관리테이블 업데이트 하기 -->
	<update id="vacUpdate_return" parameterType="HashMap">
		update tbl_vacation_manage 
		set vacation_confirm = 3
		where vacation_seq = #{vacation_seq}
	</update>
	<!-- ================== 휴가 관리 페이지 [끝] ===================== -->
	
	<!-- 휴가 재신청시  insert 하기 -->
	<insert id="vac_insert_insert" parameterType="HashMap">
		INSERT INTO tbl_vacation_manage (
			vacation_seq, 
			fk_employee_id, 
			vacation_reason, 
			vacation_start_date,
		    vacation_end_date,
		    vacation_reg_date,
		    vacation_confirm, 
		    vacation_type, 
		    vacation_manager) 
		VALUES (
			seq_vacation_manage.nextval, 
			#{fk_employee_id}, 
			#{vacation_reason},
			to_date(#{vacation_start_date}, 'YYYY-MM-DD'),
			to_date(#{vacation_end_date}, 'YYYY-MM-DD'),
			default,
			1,
			#{vacation_type},
			#{vacation_manager})
	</insert>
	
	<!-- 대기중인 휴가 총 건수 알아오기 -->
	<select id="totalCount" parameterType="String" resultType="int">
		SELECT distinct COUNT(*) OVER () AS totalCount
		FROM tbl_vacation_manage M
		JOIN tbl_employees E ON M.fk_employee_id = E.employee_id
		<if test="vacation_manager == '10000'">
		where vacation_confirm = 1 
		</if>
		<if test="vacation_manager != '10000'">
		where vacation_confirm = 1 
		and manager_id = #{employee_id}
		</if>
	</select>
	
	<!-- 대기중인휴가의 totalPage 수 알아오기 -->
	<select id="getCommentTotalPage" parameterType="HashMap" resultType="int">
		select ceil(count(*)/#{sizePerPage})
		from tbl_vacation_manage
		<if test="vacation_manager == '10000'">
		where vacation_confirm = 1 
		</if>
		<if test="vacation_manager != '10000'">
		where vacation_confirm = 1 
		and manager_id = #{employee_id}
		</if>
	</select>
	
	<!-- 승인 대기중인 휴가 삭제하기 -->
	<delete id="seq_delete" parameterType="String">
		delete from tbl_vacation_manage where vacation_seq = #{vacation_seq}
	</delete>
	
	<!-- 차트그리기 (ajax) 월별 휴가사용 수 -->
	<resultMap type="HashMap" id="monthlyVacCnt_Map">
		<result property="nowMonth11" 	column="nowMonth11" 	javaType="String"/>
		<result property="nowMonth10" 	column="nowMonth10" 	javaType="String"/>
		<result property="nowMonth9" 	column="nowMonth9" 		javaType="String"/>
		<result property="nowMonth8" 	column="nowMonth8" 		javaType="String"/>
		<result property="nowMonth7" 	column="nowMonth7" 		javaType="String"/>
		<result property="nowMonth6" 	column="nowMonth6" 		javaType="String"/>
		<result property="nowMonth5" 	column="nowMonth5" 		javaType="String"/>
		<result property="nowMonth4" 	column="nowMonth4" 		javaType="String"/>
		<result property="nowMonth3" 	column="nowMonth3" 		javaType="String"/>
		<result property="nowMonth2" 	column="nowMonth2" 		javaType="String"/>
		<result property="nowMonth1" 	column="nowMonth1" 		javaType="String"/>
		<result property="nowMonth" 	column="nowMonth" 		javaType="String"/>
	</resultMap>
	<select id="monthlyVacCnt" resultMap="monthlyVacCnt_Map">
		SELECT
		  COUNT(CASE WHEN TO_CHAR(vacation_start_date, 'YYYY-MM') = TO_CHAR(ADD_MONTHS(SYSDATE, -11), 'YYYY-MM') THEN 1 END) AS "nowMonth11",
		  COUNT(CASE WHEN TO_CHAR(vacation_start_date, 'YYYY-MM') = TO_CHAR(ADD_MONTHS(SYSDATE, -10), 'YYYY-MM') THEN 1 END) AS "nowMonth10",
		  COUNT(CASE WHEN TO_CHAR(vacation_start_date, 'YYYY-MM') = TO_CHAR(ADD_MONTHS(SYSDATE, -9), 'YYYY-MM') THEN 1 END) AS "nowMonth9",
		  COUNT(CASE WHEN TO_CHAR(vacation_start_date, 'YYYY-MM') = TO_CHAR(ADD_MONTHS(SYSDATE, -8), 'YYYY-MM') THEN 1 END) AS "nowMonth8",
		  COUNT(CASE WHEN TO_CHAR(vacation_start_date, 'YYYY-MM') = TO_CHAR(ADD_MONTHS(SYSDATE, -7), 'YYYY-MM') THEN 1 END) AS "nowMonth7",
		  COUNT(CASE WHEN TO_CHAR(vacation_start_date, 'YYYY-MM') = TO_CHAR(ADD_MONTHS(SYSDATE, -6), 'YYYY-MM') THEN 1 END) AS "nowMonth6",
		  COUNT(CASE WHEN TO_CHAR(vacation_start_date, 'YYYY-MM') = TO_CHAR(ADD_MONTHS(SYSDATE, -5), 'YYYY-MM') THEN 1 END) AS "nowMonth5",
		  COUNT(CASE WHEN TO_CHAR(vacation_start_date, 'YYYY-MM') = TO_CHAR(ADD_MONTHS(SYSDATE, -4), 'YYYY-MM') THEN 1 END) AS "nowMonth4",
		  COUNT(CASE WHEN TO_CHAR(vacation_start_date, 'YYYY-MM') = TO_CHAR(ADD_MONTHS(SYSDATE, -3), 'YYYY-MM') THEN 1 END) AS "nowMonth3",
		  COUNT(CASE WHEN TO_CHAR(vacation_start_date, 'YYYY-MM') = TO_CHAR(ADD_MONTHS(SYSDATE, -2), 'YYYY-MM') THEN 1 END) AS "nowMonth2",
		  COUNT(CASE WHEN TO_CHAR(vacation_start_date, 'YYYY-MM') = TO_CHAR(ADD_MONTHS(SYSDATE, -1), 'YYYY-MM') THEN 1 END) AS "nowMonth1",
		  COUNT(CASE WHEN TO_CHAR(vacation_start_date, 'YYYY-MM') = TO_CHAR(SYSDATE, 'YYYY-MM') THEN 1 END) AS "nowMonth"
		FROM tbl_vacation_manage
		WHERE vacation_confirm = 2
		  AND vacation_start_date >= ADD_MONTHS(SYSDATE, -12)
	</select>

</mapper>
